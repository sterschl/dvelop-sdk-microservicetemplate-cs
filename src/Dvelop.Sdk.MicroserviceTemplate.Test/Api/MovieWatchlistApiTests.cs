/*
 * Microservice template
 *
 * Mircoservice template with movie watchlist example
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Dvelop.Sdk.MicroserviceTemplate.Client;
using Dvelop.Sdk.MicroserviceTemplate.Api;
// uncomment below to import models
//using Dvelop.Sdk.MicroserviceTemplate.Model;

namespace Dvelop.Sdk.MicroserviceTemplate.Test.Api
{
    /// <summary>
    ///  Class for testing MovieWatchlistApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MovieWatchlistApiTests : IDisposable
    {
        private MovieWatchlistApi instance;

        public MovieWatchlistApiTests()
        {
            instance = new MovieWatchlistApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MovieWatchlistApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MovieWatchlistApi
            //Assert.IsType<MovieWatchlistApi>(instance);
        }

        /// <summary>
        /// Test MoviesGet
        /// </summary>
        [Fact]
        public void MoviesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MoviesGet();
            //Assert.IsType<List<Movie>>(response);
        }

        /// <summary>
        /// Test MoviesIdDelete
        /// </summary>
        [Fact]
        public void MoviesIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.MoviesIdDelete(id);
        }

        /// <summary>
        /// Test MoviesIdGet
        /// </summary>
        [Fact]
        public void MoviesIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.MoviesIdGet(id);
            //Assert.IsType<Movie>(response);
        }

        /// <summary>
        /// Test MoviesIdPatch
        /// </summary>
        [Fact]
        public void MoviesIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Movie movie = null;
            //var response = instance.MoviesIdPatch(id, movie);
            //Assert.IsType<Movie>(response);
        }

        /// <summary>
        /// Test MoviesIdPut
        /// </summary>
        [Fact]
        public void MoviesIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Movie movie = null;
            //var response = instance.MoviesIdPut(id, movie);
            //Assert.IsType<Movie>(response);
        }

        /// <summary>
        /// Test MoviesPost
        /// </summary>
        [Fact]
        public void MoviesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Movie movie = null;
            //var response = instance.MoviesPost(movie);
            //Assert.IsType<Movie>(response);
        }
    }
}
