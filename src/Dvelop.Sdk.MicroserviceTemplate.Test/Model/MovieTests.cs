/*
 * Microservice template
 *
 * Mircoservice template with movie watchlist example
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Dvelop.Sdk.MicroserviceTemplate.Api;
using Dvelop.Sdk.MicroserviceTemplate.Model;
using Dvelop.Sdk.MicroserviceTemplate.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Dvelop.Sdk.MicroserviceTemplate.Test.Model
{
    /// <summary>
    ///  Class for testing Movie
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MovieTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Movie
        //private Movie instance;

        public MovieTests()
        {
            // TODO uncomment below to create an instance of Movie
            //instance = new Movie();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Movie
        /// </summary>
        [Fact]
        public void MovieInstanceTest()
        {
            // TODO uncomment below to test "IsType" Movie
            //Assert.IsType<Movie>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Genre'
        /// </summary>
        [Fact]
        public void GenreTest()
        {
            // TODO unit test for the property 'Genre'
        }
        /// <summary>
        /// Test the property 'Director'
        /// </summary>
        [Fact]
        public void DirectorTest()
        {
            // TODO unit test for the property 'Director'
        }
        /// <summary>
        /// Test the property 'Actors'
        /// </summary>
        [Fact]
        public void ActorsTest()
        {
            // TODO unit test for the property 'Actors'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'PosterUri'
        /// </summary>
        [Fact]
        public void PosterUriTest()
        {
            // TODO unit test for the property 'PosterUri'
        }
        /// <summary>
        /// Test the property 'Oscars'
        /// </summary>
        [Fact]
        public void OscarsTest()
        {
            // TODO unit test for the property 'Oscars'
        }

    }

}
